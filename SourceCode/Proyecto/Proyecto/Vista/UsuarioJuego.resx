<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lbltop10.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AhgAwYAAEGIAAwJjAQIAAAQAAAAAAZAACD//2Q==
</value>
  </data>
</root>